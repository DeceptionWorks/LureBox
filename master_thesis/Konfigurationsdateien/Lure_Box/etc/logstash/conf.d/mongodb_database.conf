input {
  	# use filebeat as input for this log source
  	beats {
    		port => 5046
    		ssl => false
  	}
}


filter {
        # add information about the origin of the log source 
        mutate { add_field => ["[log_source][received_at]", "%{@timestamp}"] }
        mutate { add_field => ["[log_source][host]", "192.168.56.4"] }
        mutate { add_field => ["[log_source][product]", "MongoDB Enterprise 3.4.3"] }

	# split the JSON message in it's fields and append the new fields to the audit.object field
	json { source => "message" target => "[audit][object]" }

	# summarize fields about the source 
        mutate { rename => {"[audit][object][remote][ip]" => "[src][ip]"} }
        mutate { rename => {"[audit][object][remote][port]" => "[src][port]"} }


       	# the name of the datbase is stored within audit.object.param.ns
        grok { match => { "[audit][object][param][ns]" => "%{WORD:database_name}%{GREEDYDATA:unimportant}" } }
        mutate { rename => {"[database_name]" => "[audit][database][name]"} }

	# summarize fields about the audit 
        mutate { rename => {"[source]" => "[audit][file][name]"} }
        mutate { rename => {"[offset]" => "[audit][file][offset]"} }
        mutate { rename => {"[audit][object][param][command]" => "[audit][action]"} }
        mutate { rename => {"[audit][object][param][ns]" => "[audit][object][namespace]"} }
        mutate { rename => {"[audit][object][result]" => "[audit][query][return_code]"} }
        mutate { rename => {"[audit][object][atype]" => "[audit][database][atype]"} }
        mutate { rename => {"[audit][object][roles]" => "[audit][database][user_roles]"} }
        mutate { rename => {"[audit][object][users]" => "[audit][database][username]"} }
	

	# use the field ts.$date as timestamp for the event
        mutate { convert => ["[audit][object][ts][$date]" , "string"] }
        date { match => ["[audit][object][ts][$date]", "ISO8601"] }

        # remove unnecessary fields
        mutate { remove_field => ["[beat][name]","[beat][version]","[beat][hostname]","[audit][object][local][port]","[audit][object][local][ip]","input_type","host","[audit][object][ts][$date]","type","message","unimportant"] }


}

output {
 	# uncomment the following line for getting a debug output in logstash 
	#stdout { codec => rubydebug}
	
	# write the output to the elasticsearch database
	elasticsearch {
		hosts => ["127.0.0.1:9200"]
		index => "audit_databases_mongodb-%{+YYYY.MM.dd}"
	}
}
